apiVersion: v1
kind: ServiceAccount
metadata:
  name: myapp-controller
  namespace: ${NAMESPACE}
  labels:
    app.kubernetes.io/name: myapp-controller
    app.kubernetes.io/component: controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: myapp-controller
  labels:
    app.kubernetes.io/name: myapp-controller
    app.kubernetes.io/component: controller
rules:
# MyApp CRD permissions
- apiGroups: ["example.com"]
  resources: ["myapps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["example.com"]
  resources: ["myapps/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: ["example.com"]
  resources: ["myapps/finalizers"]
  verbs: ["update"]

# Managed resource permissions
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# HPA permissions (for advanced scheduling)
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Metrics and monitoring
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: myapp-controller
  labels:
    app.kubernetes.io/name: myapp-controller
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: myapp-controller
subjects:
- kind: ServiceAccount
  name: myapp-controller
  namespace: ${NAMESPACE}